version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: protocolo_db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      TZ: America/Sao_Paulo
      PGTZ: GMT-3
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - protocolo_network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: protocolo_web
    restart: unless-stopped
    command: >
      bash -c "
        echo 'Aguardando banco de dados...';
        sleep 5;
        python manage.py makemigrations;
        python manage.py migrate;
        python manage.py createsuperuser --noinput || true;
        python manage.py collectstatic --noinput;
        echo 'Iniciando aplicação...';
        gunicorn --bind 0.0.0.0:8800 --workers 3 --timeout 120 protocolo_project.wsgi:application
      "
    volumes:
      - ./staticfiles_build:/app/staticfiles_build
      - ./mediafiles:/app/mediafiles
    ports:
      - '8800:8800'
    environment:
      DJANGO_SECRET_KEY: '${DJANGO_SECRET_KEY}'
      DJANGO_DEBUG: '${DJANGO_DEBUG}'
      DJANGO_SUPERUSER_USERNAME: '${DJANGO_SUPERUSER_USERNAME}'
      DJANGO_SUPERUSER_EMAIL: '${DJANGO_SUPERUSER_EMAIL}'
      DJANGO_SUPERUSER_PASSWORD: '${DJANGO_SUPERUSER_PASSWORD}'
      TZ: America/Sao_Paulo
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_HOST: '${POSTGRES_HOST}'
      POSTGRES_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    networks:
      - protocolo_network

volumes:
  postgres_data:
    driver: local

networks:
  protocolo_network:
    driver: bridge
